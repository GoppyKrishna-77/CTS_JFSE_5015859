Exercise 6: Library Management System

1.	Understand Search Algorithms:
o	Explain linear search and binary search algorithms.

Linear Search:
    How it works: Checks each element in the list sequentially until it finds the target or reaches the end.

    Use case: Useful for small or unsorted data sets.

    Efficiency: O(n) time complexity, where n is the number of elements.

Binary Search:
    How it works: Divides the sorted list in half to locate the target element, eliminating half of the remaining elements at each step.

    Use case: Requires a sorted list and is efficient for large datasets.

    Efficiency: O(log n) time complexity, where n is the number of elements.



4.	Analysis:
o	Compare the time complexity of linear and binary search.

Linear Search: O(n) - Scans each element one by one, so it's slower for larger datasets.

Binary Search: O(log n) - More efficient as it reduces the search space exponentially with each step.

o	Discuss when to use each algorithm based on the data set size and order.

Linear Search: Ideal for small or unsorted data sets where sorting isn't feasible or needed.

Binary Search: Best for larger, sorted datasets where quick lookups are necessary. The list must be sorted for binary search to work effectively.
